{
   "_id": "_design/zoobank",
   "_rev": "4-63f879facbdd9aa5f08e95f41439f6a4",
   "language": "javascript",
   "lists": {
       "n-triples": "function(head,req) { var headers = ''; var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { send(row.value); } }"
   },
   "views": {
       "nt": {
           "map": "/*\n\nShared code\n\n\n*/\n//----------------------------------------------------------------------------------------\n// Store a triple with optional language code\nfunction triple(subject, predicate, object, language) {\n  var triple = [];\n  triple[0] = subject;\n  triple[1] = predicate;\n  triple[2] = object;\n\n  if (typeof language === 'undefined') {} else {\n    triple[3] = language;\n  }\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Store a quad (not used at present)\nfunction quad(subject, predicate, object, context) {\n  var triple = [];\n  triple[0] = $subject;\n  triple[1] = $predicate;\n  triple[2] = $object;\n  triple[3] = $context;\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Enclose triple in suitable wrapping for HTML display or triplet output\nfunction wrap(s, html) {\n  if (s.match(/^(http|urn|_:)/)) {\n    s = s.replace(/\\\\_/g, '_');\n\n    // handle < > in URIs such as SICI-based DOIs\n    s = s.replace(/</g, '%3C');\n    s = s.replace(/>/g, '%3E');\n\n   if (html) {\n      s = '&lt;' + s + '&gt;';\n    } else {\n      s = '<' + s + '>';\n    }\n  } else {\n    s = '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n  }\n  return s;\n}\n\n//----------------------------------------------------------------------------------------\n// https://css-tricks.com/snippets/javascript/htmlentities-for-javascript/\nfunction htmlEntities(str) {\n  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n//----------------------------------------------------------------------------------------\nfunction output(doc, triples) {\n    // CouchDB\n    for (var i in triples) {\n      var s = 0;\n      var p = 1;\n      var o = 2;\n\n      var lang = 3;\n\n      var nquads = wrap(triples[i][s], false) \n\t    \t+ ' ' + wrap(triples[i][p], false) \n\t    \t+ ' ' + wrap(triples[i][o], false);\n\t    if (triples[i][lang]) {\n\t    \tnquads += '@' + triples[i][lang];\n\t    }\n\t    \t\n\t    nquads += ' .' + \"\\n\";\n\n\n      emit(doc._id, nquads);\n    }\n}\n\n//----------------------------------------------------------------------------------------\nfunction  detect_language(s) {\n  var language = null;\n  var matched = 0;\n  var parts =[];\n  \n  var regexp = [];\n  \n  // https://gist.github.com/ryanmcgrath/982242\n  regexp['ja'] = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g; \n  // http://hjzhao.blogspot.co.uk/2015/09/javascript-detect-chinese-character.html\n  regexp['zh'] = /[\\u4E00-\\uFA29]/g; \n  // http://stackoverflow.com/questions/32709687/js-check-if-string-contains-only-cyrillic-symbols-and-spaces\n  regexp['ru'] = /[\\u0400-\\u04FF]/g; \n  \n  for (var i in regexp) {\n    parts = s.match(regexp[i]);\n    \n\t  if (parts != null) {\n\t\tif (parts.length > matched) {\n\t\t  language = i;\n\t\t  matched = parts.length;\n\t\t}\n\t  }\n  }\n  \n  // require a minimum matching\n  if (matched < 10) {\n    language = null;\n  }\n  \n  return language;\n  \n}\n\n// http://stackoverflow.com/a/17076120\nfunction decodeHTMLEntities(text) {\n   var entities = [\n        ['amp', '&'],\n        ['apos', '\\''],\n        ['#x27', '\\''],\n        ['#x2F', '/'],\n        ['#39', '\\''],\n\t['#039', '\\''],\n        ['#47', '/'],\n        ['lt', '<'],\n        ['gt', '>'],\n        ['nbsp', ' '],\n        ['quot', '\"']\n    ];\n\n    text = String(text);\n\n    for (var i = 0, max = entities.length; i < max; ++i) {\n        text = text.replace(new RegExp('&'+entities[i][0]+';', 'g'), entities[i][1]);\n    }\n\n    return text;\n}\n\nfunction message(doc) {\n  if (doc.message) {\n\n    var subject_id = doc.message.lsid;\n    var triples = [];\n    var type = '';\n\n    for (var i in doc.message) {\n      if (doc.message[i] != '') {\n        switch (i) {\n\n          case 'doi':\n            triples.push(triple(subject_id,\n              'http://schema.org/identifier',\n              'http://identifiers.org/doi/' + doc.message[i].toLowerCase()));\n\n            triples.push(triple(subject_id,\n              'http://prismstandard.org/namespaces/basic/2.1/doi',\n              doc.message[i].toLowerCase()));\n            break;\n\n          case 'lsid':\n            triples.push(triple(subject_id,\n              'http://schema.org/identifier',\n              doc.message[i]));\n            break;\n\n          case 'referenceuuid':\n            triples.push(triple(subject_id,\n              'http://schema.org/identifier',\n              doc.message[i].toLowerCase()));\n\n            triples.push(triple(subject_id,\n              'http://schema.org/url',\n              'http://zoobank.org/' + doc.message[i]));\n            break;\n\n          case 'title':\n            triples.push(triple(subject_id,\n              'http://schema.org/name',\n              decodeHTMLEntities(doc.message[i])));\n            break;\n\n          case 'referencetype':\n            switch (doc.message[i]) {\n              case 'Journal Article':\n                type = 'http://schema.org/ScholarlyArticle';\n                break;\n              case 'Periodical':\n                type = 'http://schema.org/Periodical';\n                break;\n              default:\n                break;\n            }\n            break;\n\n            // publisher\n            // should this be linked to journal rather than article?\n            // should this be an object rather than a string?\n          case 'publisher':\n            triples.push(triple(subject_id,\n              'http://schema.org/publisher',\n              doc.message[i]));\n            break;\n\n          case 'parentreference':\n            if (doc.message.referencetype == 'Journal Article') {\n              triples.push(triple(subject_id,\n                'http://prismstandard.org/namespaces/basic/2.1/publicationName',\n                doc.message[i]));\n            }\n            break;\n\n          case 'volume':\n            triples.push(triple(subject_id,\n              'http://schema.org/volumeNumber',\n              doc.message[i]));\n            break;\n\n          case 'number':\n            triples.push(triple(subject_id,\n              'http://schema.org/issueNumber',\n              doc.message[i]));\n            break;\n\n          case 'startpage':\n            triples.push(triple(subject_id,\n              'http://schema.org/pageStart',\n              doc.message[i]));\n            break;\n\n          case 'endpage':\n            triples.push(triple(subject_id,\n              'http://schema.org/pageEnd',\n              doc.message[i]));\n            break;\n\n          case 'pagination':\n            triples.push(triple(subject_id,\n              'http://schema.org/pagination',\n              doc.message[i]));\n            break;\n\n            // journal (or book)\n          case 'parentreferenceid':\n            var journal_id = 'urn:lsid:zoobank.org:pub:' + doc.message[i];\n\n            triples.push(triple(subject_id,\n              'http://schema.org/isPartOf',\n              journal_id\n            ));\n\n            // type (we don't actually know this, could be book)\n            /*\n\t\t\t  triples.push(triple(journal_id,\n\t\t\t\t'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n\t\t\t\t'http://schema.org/Periodical'));\n\t\t\t  */\n\n            // journal name can be string or array\n            if (doc.message.parentreference) {\n              triples.push(triple(journal_id,\n                'http://schema.org/name',\n                doc.message.parentreference));\n            }\n            break;\n\n            // authors (includes author id as uuid)\n          case 'authors':\n            var n = doc.message[i].length;\n\n            // store an ordered list of authors as well?\n\n\n            for (var j = 0; j < n; j++) {\n              var author_id = '';\n\n              if (1) {\n                // use uuid if available, otherwise hash\n                if (doc.message[i][j][0].gnubuuid) {\n                  author_id = 'urn:lsid:zoobank.org:author:' + doc.message[i][j][0].gnubuuid;\n                } else {\n                  // #hash identifier \n                  author_id = subject_id + '#author_' + (j + 1);\n                }\n              } else {\n                // always use #hash identifier \n                author_id = subject_id + '#author_' + (j + 1);\n              }\n\n\n              // type, need to handle organisations as authors\n              triples.push(triple(author_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/Person'));\n\n              triples.push(triple(subject_id,\n                'http://schema.org/author',\n                author_id));\n\n              // name \t\n              var name = '';\n\n              if (doc.message[i][j][0].givenname) {\n                triples.push(triple(author_id,\n                  'http://schema.org/givenName', // ?\n                  doc.message[i][j][0].givenname));\n\n                name += doc.message[i][j][0].givenname;\n              }\n\n              if (doc.message[i][j][0].familyname) {\n                triples.push(triple(author_id,\n                  'http://schema.org/familyName', // ?\n                  doc.message[i][j][0].familyname));\n\n                name += ' ' + doc.message[i][j][0].familyname;\n              }\n\n              if (name != '') {\n                triples.push(triple(author_id,\n                  'http://schema.org/name', // ?\n                  name));\n              }\n\n              // identifier\n              if (doc.message[i][j][0].gnubuuid) {\n                triples.push(triple(author_id,\n                  'http://schema.org/identifier',\n                  author_id));\n              }\n\n\n\n            }\n            break;\n\n            // names published\n          case 'NomenclaturalActs':\n            for (var j in doc.message[i]) {\n\n\n              // to do, not all names have LSIDs, e.g. \n              var name_id = ''\n\n              if (doc.message[i][j].lsid && (doc.message[i][j].lsid != \"\")) {\n                name_id = doc.message[i][j].lsid;\n              } else {\n                name_id = 'http://zoobank.org/' + doc.message[i][j].tnuuuid;\n              }\n\n              triples.push(triple(name_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://rs.tdwg.org/ontology/voc/TaxonName#TaxonName'));\n\n              for (var k in doc.message[i][j]) {\n                if (doc.message[i][j][k] != '') {\n                  switch (k) {\n\n                    case 'lsid':\n                      triples.push(triple(name_id,\n                        'http://schema.org/identifier',\n                        doc.message[i][j][k]));\n                      break;\n\n                    case 'tnuuuid':\n                      triples.push(triple(name_id,\n                        'http://schema.org/identifier',\n                        'http://zoobank.org/' + doc.message[i][j][k]));\n\n                      triples.push(triple(name_id,\n                        'http://schema.org/url',\n                        'http://zoobank.org/' + doc.message[i][j][k]));\n                      break;\n\n                    case 'OriginalReferenceUUID':\n                      triples.push(triple(name_id,\n                        'http://rs.tdwg.org/ontology/voc/Common#publishedInCitation',\n                        'urn:lsid:zoobank.org:pub:' + doc.message[i][j][k]));\n\n                      // DwC\n                      triples.push(triple(name_id,\n                        'http://rs.tdwg.org/dwc/terms/namePublishedInID',\n                        'urn:lsid:zoobank.org:pub:' + doc.message[i][j][k]));\n                      break;\n\n                    case 'parentusageuuid':\n                      triples.push(triple(name_id,\n                        'http://rs.tdwg.org/dwc/terms/parentNameUsageID',\n                        'http://zoobank.org/' + doc.message[i][j][k]));\n                      break;\n\n                    case 'cleanprotonym':\n                      triples.push(triple(name_id,\n                        'http://schema.org/name',\n                        doc.message[i][j][k]));\n\n                      triples.push(triple(name_id,\n                        'http://rs.tdwg.org/dwc/terms/scientificName',\n                        doc.message[i][j][k]));\n                      break;\n\n                    case 'rankgroup':\n                      triples.push(triple(name_id,\n                        'http://rs.tdwg.org/ontology/voc/TaxonName#rankString',\n                        doc.message[i][j][k]));\n                      break;\n\n                    case 'namestring':\n                      var nameComplete = '';\n                      switch (doc.message[i][j].rankgroup) {\n                        case 'Genus':\n                          nameComplete = doc.message[i][j][k];\n                          break;\n\n                        case 'Species':\n                          var pos = doc.message[i][j].cleanprotonym.indexOf(doc.message[i][j][k]);\n                          var nameComplete = doc.message[i][j].cleanprotonym.substring(0, pos + doc.message[i][j][k].length);\n                          break;\n\n                        default:\n                          break;\n\n                      }\n                      if (nameComplete != '') {\n                        triples.push(triple(name_id,\n                          'http://rs.tdwg.org/ontology/voc/TaxonName#nameComplete',\n                          nameComplete));\n                      }\n                      break;\n\n                    case 'NomenclaturalCode':\n                      switch (doc.message[i][j][k]) {\n                        case 'ICZN':\n                          triples.push(triple(name_id,\n                            'http://rs.tdwg.org/ontology/voc/TaxonName#nomenclaturalCode',\n                            'http://rs.tdwg.org/ontology/voc/TaxonName#ICZN'));\n                          break;\n\n                        default:\n                          break;\n                      }\n                      break;\n\n                    default:\n                      break;\n                  }\n                }\n              }\n\n            }\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n\n    if (type == '') {\n      type = 'http://schema.org/CreativeWork';\n    }\n\n\n    // defaults\n    triples.push(triple(subject_id,\n      'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n      type));\n\n    output(doc, triples);\n  }\n}\n\nfunction(doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] == 'application\\/vnd.zoobank+json') {\n      message(doc);\n    }\n  }\n}"
       },
       "modified": {
           "map": "function(doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] == 'application\\/vnd.zoobank+json') {\n     if (doc.message) {\n      emit(doc['message-modified'], doc._id);\n     }\n    }\n  }\n}"
       }
   }
}